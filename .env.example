### Adjust these ###

# You get the discord token at https://discord.com/developers/applications
# Create an application, go to "Bot", click on "Add Bot" and you'll have the token.
# Be sure the "Message Content Intent" is enabled so the bot can read message content.
# Be also sure the "Server Members Intent" is enabled which the bot uses to check if it
# has enough permissions to respond to a command.
# To get the invite link, go to "OAuth2" > "URL Generator", click on "bot" and "applications.commands".
# For permissions, at the very least the bot needs
#   - "Read Messages/View Channels"
#   - "Send Messages"
#   - "Read Message History"
#   - "Use External Emojis"
#   - "Add reactions"
# ... which will result in an invite link like
# https://discord.com/api/oauth2/authorize?client_id={client_id}&permissions=330816&scope=bot%20applications.commands
DISCORD_TOKEN = ""

# You get the osu client id and client secret in your osu user settings at https://osu.ppy.sh/home/account/edit
# Click on "New OAuth Application", choose "showerbot" as name and leave the callback URL empty
OSU_CLIENT_ID = 1234
OSU_CLIENT_SECRET = ""

# The osu session provides access for the bot to the osu api on your behalf.
# For this whole thing to work, you need an account that has osu supporter.
# The session key can be found in your browser cookies.
# For example, in Chrome it is:
#   - Settings
#   - Privacy and security
#   - Cookies and other site data
#   - See all cookies and site data
#   - Search for and choose "ppy.sh"
#   - There you'll see the osu_session cookie, "Content" is the value you need
OSU_SESSION = ""

# Only this person can change prefixes
OWNER_USER_ID = 1234

# Grades, you should specify any custom emotes of a server that the bot is in
F = "<:name:id>"
D = "<:name:id>"
C = "<:name:id>"
B = "<:name:id>"
A = "<:name:id>"
S = "<:name:id>"
X = "<:name:id>"
SH = "<:name:id>"
XH = "<:name:id>"

# Emotes
jump_start = "<:name:id>"
single_step_back = "<:name:id>"
single_step = "<:name:id>"
jump_end = "<:name:id>"
miss = "<:name:id>"

### Only adjust these if you run it manually and not through docker ###

# postgres://{username}:{password}@{host}:{port}/{database}
DATABASE_URL = "postgres://showerbot:showerbot@showerbot-db:5423/showerbot"

# Folder in which all .osu files will be stored
MAP_PATH = "/usr/local/beatmaps"

### No need to adjust these ###

# Specify how detailed the logs should be
RUST_LOG = "info"

# In case you run in debug mode, slash commands will only be set to this guild
DEV_GUILD_ID = 741040473476694159

# Validate sql queries through the sqlx-data.json file
# instead of an actual database connection
SQLX_OFFLINE=true